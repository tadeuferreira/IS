//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartH2O_DLog.SmartH20_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParamVals", Namespace="http://schemas.datacontract.org/2004/07/SmartH2O_Service")]
    [System.SerializableAttribute()]
    public partial class ParamVals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] AverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Average {
            get {
                return this.AverageField;
            }
            set {
                if ((object.ReferenceEquals(this.AverageField, value) != true)) {
                    this.AverageField = value;
                    this.RaisePropertyChanged("Average");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Max {
            get {
                return this.MaxField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxField, value) != true)) {
                    this.MaxField = value;
                    this.RaisePropertyChanged("Max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Min {
            get {
                return this.MinField;
            }
            set {
                if ((object.ReferenceEquals(this.MinField, value) != true)) {
                    this.MinField = value;
                    this.RaisePropertyChanged("Min");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmInfo", Namespace="http://schemas.datacontract.org/2004/07/SmartH2O_Service")]
    [System.SerializableAttribute()]
    public partial class AlarmInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LowerBoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SensorValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TriggerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TriggerValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float UpperBoundField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datetime {
            get {
                return this.DatetimeField;
            }
            set {
                if ((this.DatetimeField.Equals(value) != true)) {
                    this.DatetimeField = value;
                    this.RaisePropertyChanged("Datetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float LowerBound {
            get {
                return this.LowerBoundField;
            }
            set {
                if ((this.LowerBoundField.Equals(value) != true)) {
                    this.LowerBoundField = value;
                    this.RaisePropertyChanged("LowerBound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SensorVal {
            get {
                return this.SensorValField;
            }
            set {
                if ((this.SensorValField.Equals(value) != true)) {
                    this.SensorValField = value;
                    this.RaisePropertyChanged("SensorVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TriggerType {
            get {
                return this.TriggerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggerTypeField, value) != true)) {
                    this.TriggerTypeField = value;
                    this.RaisePropertyChanged("TriggerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TriggerValue {
            get {
                return this.TriggerValueField;
            }
            set {
                if ((this.TriggerValueField.Equals(value) != true)) {
                    this.TriggerValueField = value;
                    this.RaisePropertyChanged("TriggerValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float UpperBound {
            get {
                return this.UpperBoundField;
            }
            set {
                if ((this.UpperBoundField.Equals(value) != true)) {
                    this.UpperBoundField = value;
                    this.RaisePropertyChanged("UpperBound");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmartH20_Service.ISmartH2O_Service")]
    public interface ISmartH2O_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutParam", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutParamResponse")]
        void PutParam(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutParam", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutParamResponse")]
        System.Threading.Tasks.Task PutParamAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutAlarm", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutAlarmResponse")]
        void PutAlarm(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutAlarm", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutAlarmResponse")]
        System.Threading.Tasks.Task PutAlarmAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamHourly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamHourlyResponse")]
        SmartH2O_DLog.SmartH20_Service.ParamVals[] GetParamHourly(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamHourly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamHourlyResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals[]> GetParamHourlyAsync(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamDailyResponse")]
        SmartH2O_DLog.SmartH20_Service.ParamVals[] GetParamDaily(System.DateTime dtStart, System.DateTime dtEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamDailyResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals[]> GetParamDailyAsync(System.DateTime dtStart, System.DateTime dtEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamWeekly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamWeeklyResponse")]
        SmartH2O_DLog.SmartH20_Service.ParamVals[] GetParamWeekly(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamWeekly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamWeeklyResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals[]> GetParamWeeklyAsync(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmDailyResponse")]
        SmartH2O_DLog.SmartH20_Service.AlarmInfo[] GetAlarmDaily(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmDailyResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.AlarmInfo[]> GetAlarmDailyAsync(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmInterval", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmIntervalResponse")]
        SmartH2O_DLog.SmartH20_Service.AlarmInfo[] GetAlarmInterval(System.DateTime dtStart, System.DateTime dtEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmInterval", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmIntervalResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.AlarmInfo[]> GetAlarmIntervalAsync(System.DateTime dtStart, System.DateTime dtEnd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmartH2O_ServiceChannel : SmartH2O_DLog.SmartH20_Service.ISmartH2O_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmartH2O_ServiceClient : System.ServiceModel.ClientBase<SmartH2O_DLog.SmartH20_Service.ISmartH2O_Service>, SmartH2O_DLog.SmartH20_Service.ISmartH2O_Service {
        
        public SmartH2O_ServiceClient() {
        }
        
        public SmartH2O_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmartH2O_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartH2O_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartH2O_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PutParam(string xml) {
            base.Channel.PutParam(xml);
        }
        
        public System.Threading.Tasks.Task PutParamAsync(string xml) {
            return base.Channel.PutParamAsync(xml);
        }
        
        public void PutAlarm(string xml) {
            base.Channel.PutAlarm(xml);
        }
        
        public System.Threading.Tasks.Task PutAlarmAsync(string xml) {
            return base.Channel.PutAlarmAsync(xml);
        }
        
        public SmartH2O_DLog.SmartH20_Service.ParamVals[] GetParamHourly(System.DateTime dt) {
            return base.Channel.GetParamHourly(dt);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals[]> GetParamHourlyAsync(System.DateTime dt) {
            return base.Channel.GetParamHourlyAsync(dt);
        }
        
        public SmartH2O_DLog.SmartH20_Service.ParamVals[] GetParamDaily(System.DateTime dtStart, System.DateTime dtEnd) {
            return base.Channel.GetParamDaily(dtStart, dtEnd);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals[]> GetParamDailyAsync(System.DateTime dtStart, System.DateTime dtEnd) {
            return base.Channel.GetParamDailyAsync(dtStart, dtEnd);
        }
        
        public SmartH2O_DLog.SmartH20_Service.ParamVals[] GetParamWeekly(System.DateTime dt) {
            return base.Channel.GetParamWeekly(dt);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals[]> GetParamWeeklyAsync(System.DateTime dt) {
            return base.Channel.GetParamWeeklyAsync(dt);
        }
        
        public SmartH2O_DLog.SmartH20_Service.AlarmInfo[] GetAlarmDaily(System.DateTime dt) {
            return base.Channel.GetAlarmDaily(dt);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.AlarmInfo[]> GetAlarmDailyAsync(System.DateTime dt) {
            return base.Channel.GetAlarmDailyAsync(dt);
        }
        
        public SmartH2O_DLog.SmartH20_Service.AlarmInfo[] GetAlarmInterval(System.DateTime dtStart, System.DateTime dtEnd) {
            return base.Channel.GetAlarmInterval(dtStart, dtEnd);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.AlarmInfo[]> GetAlarmIntervalAsync(System.DateTime dtStart, System.DateTime dtEnd) {
            return base.Channel.GetAlarmIntervalAsync(dtStart, dtEnd);
        }
    }
}
