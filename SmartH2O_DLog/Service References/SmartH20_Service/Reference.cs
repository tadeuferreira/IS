//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartH2O_DLog.SmartH20_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParamVals", Namespace="http://schemas.datacontract.org/2004/07/SmartH2O_Service")]
    [System.SerializableAttribute()]
    public partial class ParamVals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<double> AverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<double> MaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<double> MinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<double> Average {
            get {
                return this.AverageField;
            }
            set {
                if ((object.ReferenceEquals(this.AverageField, value) != true)) {
                    this.AverageField = value;
                    this.RaisePropertyChanged("Average");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<double> Max {
            get {
                return this.MaxField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxField, value) != true)) {
                    this.MaxField = value;
                    this.RaisePropertyChanged("Max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<double> Min {
            get {
                return this.MinField;
            }
            set {
                if ((object.ReferenceEquals(this.MinField, value) != true)) {
                    this.MinField = value;
                    this.RaisePropertyChanged("Min");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmInfo", Namespace="http://schemas.datacontract.org/2004/07/SmartH2O_Service")]
    [System.SerializableAttribute()]
    public partial class AlarmInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlarmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HigherTriggerValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowerTriggerValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SensorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TriggerValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmTypeField, value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HigherTriggerValue {
            get {
                return this.HigherTriggerValueField;
            }
            set {
                if ((this.HigherTriggerValueField.Equals(value) != true)) {
                    this.HigherTriggerValueField = value;
                    this.RaisePropertyChanged("HigherTriggerValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowerTriggerValue {
            get {
                return this.LowerTriggerValueField;
            }
            set {
                if ((this.LowerTriggerValueField.Equals(value) != true)) {
                    this.LowerTriggerValueField = value;
                    this.RaisePropertyChanged("LowerTriggerValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SensorId {
            get {
                return this.SensorIdField;
            }
            set {
                if ((this.SensorIdField.Equals(value) != true)) {
                    this.SensorIdField = value;
                    this.RaisePropertyChanged("SensorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorType {
            get {
                return this.SensorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeField, value) != true)) {
                    this.SensorTypeField = value;
                    this.RaisePropertyChanged("SensorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TriggerValue {
            get {
                return this.TriggerValueField;
            }
            set {
                if ((this.TriggerValueField.Equals(value) != true)) {
                    this.TriggerValueField = value;
                    this.RaisePropertyChanged("TriggerValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmartH20_Service.ISmartH2O_Service")]
    public interface ISmartH2O_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutParam", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutParamResponse")]
        void PutParam(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutParam", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutParamResponse")]
        System.Threading.Tasks.Task PutParamAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutAlarm", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutAlarmResponse")]
        void PutAlarm(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/PutAlarm", ReplyAction="http://tempuri.org/ISmartH2O_Service/PutAlarmResponse")]
        System.Threading.Tasks.Task PutAlarmAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamHourly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamHourlyResponse")]
        SmartH2O_DLog.SmartH20_Service.ParamVals GetParamHourly(string day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamHourly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamHourlyResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals> GetParamHourlyAsync(string day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamDailyResponse")]
        SmartH2O_DLog.SmartH20_Service.ParamVals GetParamDaily(string startDay, string endDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamDailyResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals> GetParamDailyAsync(string startDay, string endDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamWeekly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamWeeklyResponse")]
        SmartH2O_DLog.SmartH20_Service.ParamVals GetParamWeekly(string day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetParamWeekly", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetParamWeeklyResponse")]
        System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals> GetParamWeeklyAsync(string day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmDailyResponse")]
        System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo> GetAlarmDaily(string day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmDaily", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmDailyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo>> GetAlarmDailyAsync(string day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmInterval", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmIntervalResponse")]
        System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo> GetAlarmInterval(string startDay, string endDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartH2O_Service/GetAlarmInterval", ReplyAction="http://tempuri.org/ISmartH2O_Service/GetAlarmIntervalResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo>> GetAlarmIntervalAsync(string startDay, string endDay);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmartH2O_ServiceChannel : SmartH2O_DLog.SmartH20_Service.ISmartH2O_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmartH2O_ServiceClient : System.ServiceModel.ClientBase<SmartH2O_DLog.SmartH20_Service.ISmartH2O_Service>, SmartH2O_DLog.SmartH20_Service.ISmartH2O_Service {
        
        public SmartH2O_ServiceClient() {
        }
        
        public SmartH2O_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmartH2O_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartH2O_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartH2O_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PutParam(string xml) {
            base.Channel.PutParam(xml);
        }
        
        public System.Threading.Tasks.Task PutParamAsync(string xml) {
            return base.Channel.PutParamAsync(xml);
        }
        
        public void PutAlarm(string xml) {
            base.Channel.PutAlarm(xml);
        }
        
        public System.Threading.Tasks.Task PutAlarmAsync(string xml) {
            return base.Channel.PutAlarmAsync(xml);
        }
        
        public SmartH2O_DLog.SmartH20_Service.ParamVals GetParamHourly(string day) {
            return base.Channel.GetParamHourly(day);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals> GetParamHourlyAsync(string day) {
            return base.Channel.GetParamHourlyAsync(day);
        }
        
        public SmartH2O_DLog.SmartH20_Service.ParamVals GetParamDaily(string startDay, string endDay) {
            return base.Channel.GetParamDaily(startDay, endDay);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals> GetParamDailyAsync(string startDay, string endDay) {
            return base.Channel.GetParamDailyAsync(startDay, endDay);
        }
        
        public SmartH2O_DLog.SmartH20_Service.ParamVals GetParamWeekly(string day) {
            return base.Channel.GetParamWeekly(day);
        }
        
        public System.Threading.Tasks.Task<SmartH2O_DLog.SmartH20_Service.ParamVals> GetParamWeeklyAsync(string day) {
            return base.Channel.GetParamWeeklyAsync(day);
        }
        
        public System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo> GetAlarmDaily(string day) {
            return base.Channel.GetAlarmDaily(day);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo>> GetAlarmDailyAsync(string day) {
            return base.Channel.GetAlarmDailyAsync(day);
        }
        
        public System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo> GetAlarmInterval(string startDay, string endDay) {
            return base.Channel.GetAlarmInterval(startDay, endDay);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SmartH2O_DLog.SmartH20_Service.AlarmInfo>> GetAlarmIntervalAsync(string startDay, string endDay) {
            return base.Channel.GetAlarmIntervalAsync(startDay, endDay);
        }
    }
}
